{"version":3,"sources":["componets/Clima.jsx","App.jsx","index.js"],"names":["data","Date","dias","Array","mes","getMonth","ano4","getFullYear","str_data","props","useState","location","setLocation","weather","setWeather","str","getWeather","lat","long","a","axios","get","params","lon","appid","lang","units","icon","res","console","log","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Card","className","style","width","Img","variant","src","Body","ListGroup","ListGroupItem","class","border","Header","as","name","sys","country","getDay","Text","Badge","bg","Math","trunc","main","temp","description","toLowerCase","replace","toUpperCase","temp_min","temp_max","Title","OverlayTrigger","overlay","Tooltip","id","ProgressBar","striped","now","_","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dd24be5.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport \"./Clima.css\"\r\nimport { OverlayTrigger, Card, ProgressBar, Badge, ListGroupItem, ListGroup, Tooltip } from 'react-bootstrap';\r\nimport axios from 'axios'\r\n\r\n// Obtém a data/hora atual\r\nvar data = new Date();\r\n\r\n// Guarda cada pedaço em uma variável\r\nvar dias = new Array(\r\n  'Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado');\r\nvar months = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julio\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"];\r\n\r\nvar mes = data.getMonth();          // 0-11 (zero=janeiro)\r\nvar ano4 = data.getFullYear();       // 4 dígitos\r\n\r\n// Formata a data e a hora (note o mês + 1)\r\nvar str_data = (mes + 1) + ' ' + months[data.getMonth()] + ' ' + ano4;\r\n\r\nexport default props => {\r\n  const [location, setLocation] = useState(false);\r\n  const [weather, setWeather] = useState(false);\r\n\r\n  function letraMaiuscula(str) {\r\n    var subst = str.toLowerCase().replace(/(?:^|\\s)\\S/g, function (a) { return a.toUpperCase(); });\r\n    return subst;\r\n  }\r\n\r\n  let getWeather = async (lat, long) => {\r\n    let res = await axios.get(\"https://api.openweathermap.org/data/2.5/weather\", {\r\n      params: {\r\n        lat: lat,\r\n        lon: long,\r\n        appid: \"61a6c6f7a81962b8d69cc80d900a8543\",\r\n        lang: 'pt',\r\n        units: 'metric',\r\n        icon: 'icon'\r\n      }\r\n    });\r\n    setWeather(res.data);\r\n    console.log(res.data);\r\n  }\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      getWeather(position.coords.latitude, position.coords.longitude);\r\n      setLocation(true)\r\n    })\r\n  }, [])\r\n\r\n  if (location == false) {\r\n    return (\r\n      <Card className=\"Alerta\" style={{ width: '23rem' }}>\r\n        <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/img/localizacao.png'} />\r\n        <Card.Body>\r\n        </Card.Body>\r\n        <ListGroup >\r\n          <ListGroupItem class=\"fw-light mt-4 text-white\">Você precisa habilitar a localização no browser</ListGroupItem>\r\n        </ListGroup>\r\n      </Card>\r\n    )\r\n  } else if (weather == false) {\r\n    return (\r\n      <Fragment>\r\n        <div class=\"loader\">Loading...</div>\r\n      </Fragment>\r\n    )\r\n  } else {\r\n    return (\r\n      <Card className=\"Card\" border=\"dark\" style={{ width: '23rem' }}>\r\n        <Card.Header className=\"header-color\" as=\"h5\"><div className=\"titulo-text\">{weather.name}, {weather.sys.country}</div><br />\r\n          <div className=\"data\">{dias[data.getDay()]}, {str_data}</div></Card.Header>\r\n        <Card.Body className=\"body-center\">\r\n          <Card.Text>\r\n            <Badge className=\"temp\" bg=\"secondary\" bg=\"warning\" text=\"dark\">{Math.trunc(weather.main.temp)}°c</Badge><br />\r\n            <div>\r\n              <Card.Img className=\"image-temp\" variant=\"top\" src={process.env.PUBLIC_URL + '/icons/' + weather.weather[0].icon + '.png'} />\r\n            </div>\r\n            <div className=\"descricao\">{letraMaiuscula(weather.weather[0].description)}</div>\r\n            <div className=\"temp-max-min\">{Math.trunc(weather.main.temp_min)}°c / {Math.trunc(weather.main.temp_max)}°c </div><br />\r\n            <div>\r\n              <Card.Title className=\"progress-text\">Humidade</Card.Title>\r\n              <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">{weather['main']['humidity']}%</Tooltip>}>\r\n                <ProgressBar striped variant=\"info\" now={weather['main']['humidity']} />\r\n              </OverlayTrigger>\r\n            </div>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport './App.css'\r\nimport Clima from './componets/Clima'\r\n\r\nexport default _ =>\r\n    <div className=\"App\">\r\n        <Card className=\"Tit\">\r\n            <Card.Body class=\"fw-light mt-3 text-white\">TEMPO E TEMPERATURA</Card.Body>\r\n        </Card>\r\n        <div className=\"Cards\">\r\n            <Clima>\r\n            </Clima>\r\n        </div>\r\n        <body class=\"d-flex flex-column\">\r\n            <div id=\"page-content\">\r\n                <div class=\"container text-center\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-md-7\">\r\n                            <h1 class=\"fw-light mt-4 text-white\">Clima da localização atual</h1>\r\n                            <p class=\"lead text-white-50\">Saiba da previsão do tempo da sua localização atual</p><br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <footer id=\"sticky-footer\" class=\"flex-shrink-0 py-4 bg-dark text-white-50\">\r\n                <div class=\"container text-center\">\r\n                    <small>Desenvolvedor &copy; Kelvin Brucelee</small>\r\n                </div>\r\n            </footer>\r\n        </body>\r\n\r\n    </div>","import './index.css'\r\nimport ReactDOM from 'react-dom'\r\nimport React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render( <\r\n    App / > ,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}